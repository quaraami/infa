Шаблоны, соответствующие одному символу
.   Один любой символ, кроме новой строки \n.
\d	Любая цифра
\D	Любой символ, кроме цифры
\s	Любой пробельный символ (пробел, табуляция, конец строки и т.п.)
\S	Любой непробельный символ
\w	Любая буква (то, что может быть частью слова), а также цифры и _
\W	Любая не-буква, не-цифра и не подчёркивание
[..]	Один из символов в скобках, а также любой символ из диапазона a-b
[^..]	Любой символ, кроме перечисленных
\d≈[0-9], \D≈[^0-9], \w≈[0-9a-zA-Z а-яА-ЯёЁ], \s≈[ \f\n\r\t\v]	Буква “ё” не включается в общий диапазон букв! Вообще говоря, в \d включается всё, что в юникоде помечено как «цифра», а в \w — как буква. Ещё много всего!
[abc-], [-1]	если нужен минус, его нужно указать последним или первым
\b	Начало или конец слова (слева пусто или не-буква, справа буква и наоборот). В отличие от предыдущих соответствует позиции, а не символу
\B	Не граница слова: либо и слева, и справа буквы, либо и слева, и справа НЕ буквы
[*[(+\]\t]	внутри скобок нужно экранировать только ] и \
^	начало строки
$	конец строки
------------------------------------------------------------------------------------------------------------------------------
Квантификаторы (указание количества повторений)
{n}	Ровно n повторений
{m,n}	От m до n повторений включительно
{m,}	Не менее m повторений
{,n}	Не более n повторений
?	Ноль или одно вхождение, синоним {0,1}
*	Ноль или более, синоним {0,}
+	Одно или более, синоним {1,}
------------------------------------------------------------------------------------------------------------------------------
Функции для работы с регулярками живут в модуле re (import re). Основные функции
re.search(pattern, string)	Найти в строке string первую строчку, подходящую под шаблон pattern;
re.fullmatch(pattern, string)	Проверить, подходит ли строка string под шаблон pattern;
re.split(pattern, string, maxsplit=0)	Аналог str.split(), только разделение происходит по подстрокам, подходящим под шаблон pattern;
re.findall(pattern, string)	Найти в строке string все непересекающиеся шаблоны pattern;
re.finditer(pattern, string)	Итератор всем непересекающимся шаблонам pattern в строке string (выдаются match-объекты);
re.sub(pattern, repl, string, count=0)	Заменить в строке string все непересекающиеся шаблоны pattern на repl;
match[0], match.group()	Подстрока, соответствующая шаблону
match.start()	Индекс в исходной строке, начиная с которого идёт найденная подстрока
match.end()	Индекс в исходной строке, который следует сразу за найденной подстрока
------------------------------------------------------------------------------------------------------------------------------
Константы
re.ASCII	По умолчанию \w, \W, \b, \B, \d, \D, \s, \S соответствуют все юникодные символы с соответствующим качеством. Например, \d соответствуют не только арабские цифры, но и вот такие: ٠١٢٣٤٥٦٧٨٩. re.ASCII ускоряет работу, если все соответствия лежат внутри ASCII.
re.IGNORECASE	Не различать заглавные и маленькие буквы. Работает медленнее, но иногда удобно
re.MULTILINE	Специальные символы ^ и $ соответствуют началу и концу каждой строки
re.DOTALL	По умолчанию символ \n конца строки не подходит под точку. С этим флагом точка — вообще любой символ